from itertools import product
import random

ind = 0
starts = [f'f{i}' for i in range(1, 25)]
dests = [f'd{i}' for i in range(1, 101)]
mu = 15*60 # 15 minutes = 900 seconds
sigma = 5*60 # 5 minutes = 300 seconds
simulation_time = 3600 # 1 hour = 3600 seconds
paths = list(product(starts, dests))
all_dests = list(product(dests, dests))

routes = []
for (start, dest) in paths:
    # depart_time = max(0, min(simulation_time, random.gauss(mu, sigma)))
    # routes.append((ind, depart_time, start, dest))
    # ind += 1
    
    # depart_time = max(0, min(simulation_time, random.gauss(mu, sigma)))
    # routes.append((ind, depart_time, start, dest))
    # ind += 1
    
    if random.random() > 0.5:
        depart_time = max(0, min(simulation_time, random.gauss(mu, sigma)))
        routes.append((ind, depart_time, start, dest))
        ind += 1

    # if random.random() > 0.5:  
    #     depart_time = max(0, min(simulation_time, random.gauss(mu, sigma)))
    #     routes.append((ind, depart_time, start, dest))
    #     ind += 1

for dest1, dest2 in all_dests:
    if dest1 == dest2:
        continue
    if(random.random() > 0.5):
        depart_time = max(0, min(simulation_time, random.gauss(mu, sigma)))
        routes.append((ind, depart_time, f"-{dest1}", dest2))
        ind += 1

# Sort the routes by departure time
routes.sort(key=lambda x: x[1])

# Print the XML routes in sorted order
print('<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.dlr.de/xsd/routes_file.xsd">')
print(f'\t<vType id="car" lcStrategic="120" lcCooperative="1.0"/>') 
for route in routes:
    print(f'\t<trip id="{route[0]}" depart="{route[1]}" from="{route[2]}" to="{route[3]}" type="car"/>')
print('</routes>')

# plot a graph of the departure times
import matplotlib.pyplot as plt
import numpy as np

depart_times = [route[1] for route in routes]
plt.hist(depart_times, bins=20)
plt.xlabel('Departure Time')
plt.ylabel('Count')
plt.title('Departure Time Distribution')
plt.show()
# plot into a file
plt.hist(depart_times, bins=20)
plt.xlabel('Departure Time')
plt.ylabel('Count')
plt.title('Departure Time Distribution')
plt.savefig('depart_time_distribution.png')

# The output of this script is a set of routes in XML format that can be used by SUMO. The routes are generated by
# randomly selecting a start and destination pair and assigning a departure time to the vehicle. The departure times